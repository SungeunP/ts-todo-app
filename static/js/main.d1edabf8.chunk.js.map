{"version":3,"sources":["Wording.ts","styled-mui-components/Button.tsx","types/Tab.ts","components/IconEditor.tsx","components/TodoDialog.tsx","components/CreateTabDialog.tsx","components/TabList.tsx","components/SideBar.tsx","types/Todo.ts","components/common/CheckboxButton.tsx","components/todoList.tsx","components/AddTodoButton.tsx","components/body.tsx","components/TitleEditor.tsx","components/header.tsx","components/SettingDialog.tsx","App.tsx","reportWebVitals.ts","AppTheme.ts","index.tsx","components/TabList.module.scss","components/IconEditor.module.scss","components/todoList.module.scss","components/header.module.scss","components/common/CheckboxButton.module.scss","components/CreateTabDialog.module.scss","components/SideBar.module.scss","components/TitleEditor.module.scss","app.module.scss","components/TodoDialog.module.scss","components/body.module.scss","components/AddTodoButton.module.scss"],"names":["wording_type","withStyles","root","borderRadius","boxShadow","Button","Tab","icon","title","todos","id","this","getIndex","updatedTitle","index","DEFAULT_ICONS","IconEditor","open","anchorEl","defaultIcon","onClose","onConfirm","useState","icons","setIcons","editingIcon","setEditingIcon","inputedIcon","setInputedIcon","useEffect","setTimeout","findIcon","find","_onClose","onConfirmBtnClicked","trim","concat","Popover","className","styles","popover_content","marginThreshold","transformOrigin","vertical","horizontal","popover_wrap","icon_picker","map","IconButton","selected","onClick","clickedIcon","input_icon","TextField","input","placeholder","value","onInput","e","target","length","onKeyPress","key","confirm_button","variant","color","Check","TodoDialogTypes","getRandomWording","items","Math","floor","random","createTabWording","createTodoWording","todoListPHWording","getWording","type","create_todo","create_tab","todolist_placeholder","CreateTabDialog","onCreate","iconEditorAnchor","setIconEditorAnchor","setIcon","setTitle","setPlaceholder","createdTab","_showIconEditor","Boolean","Dialog","fullWidth","DialogTitle","style","paddingBottom","DialogContent","dialog_content","autoFocus","label","DialogActions","TabItem","isHover","setIsHover","tab","hover","onMouseEnter","onMouseLeave","label_wrap","Typography","TabList","tabs","onTabClick","onTabCreate","showCreateTab","setShowCreateTab","_onTabClick","_tab","add_tab","stopPropagation","SideBar","children","_open","setOpen","runAnimation","setRunAnimation","side_bar","show","currentTarget","Todo","completed","buttonStyle","minWidth","width","height","padding","CheckboxButton","checked","onChange","disableRipple","checkbox_btn","circle","check","Item","onCheckChange","onDelete","ListItem","button","ListItemIcon","ListItemText","primary","ListItemTypo","text","ListItemSecondaryAction","Delete","item_secondary_icon","item_content","TodoList","onEdit","onCreateAction","isItemsExist","List","list","item","create_todo_desc","AddTodoButton","Fab","add_button","Add","TodoDialog","Create","todo","defaultText","onUpdate","onCancel","_title","isCreateMode","showWarn","setShowWarn","inputPlaceholder","setInputPlaceholder","createTodo","createdItem","displayedTitlePrefix","displayedConfirmBtnText","add_todo","input_todo","defaultValue","onKeyDown","Snackbar","message","autoHideDuration","Body","onTodoDeleted","onTodoEdited","onTodoCreated","editingTodo","setEditingTodo","showTodoDialog","setShowTodoDialog","addBtnClicked","dialogType","Edit","dialogDefaultText","undefined","body","targetTodo","console","error","assignedTodo","TitleEditor","defaultTitle","editingTitle","setEditingTitle","placeHolder","InputBase","edit_title","fontSize","Header","onEditTitle","onEditIcon","titleAnchorEl","setTitleAnchorEl","iconAnchorEl","setIconAnchorEl","showTitleEditor","showIconEditor","header","menu","title_wrap","SettingDialog","TODOS_DAILY_TASKS","TODOS_STUDY","TODOS_GAMES","TABS","App","showSidebar","setShowSidebar","setTabs","tabSelection","setTabSelection","updateTodos","showSettings","setShowSettings","editedTitle","updatedTab","editedIcon","filter","deleteTodo","updatedTodo","result","CircularProgress","currentTabId","updatedTabs","setting_btn","Settings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","main","ReactDOM","render","ThemeProvider","AppTheme","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d1edabf8.chunk.js","sourcesContent":["export enum wording_type {\r\n  create_todo = 'CREATE_TODO',\r\n  create_tab = 'CREATE_TAB',\r\n  todolist_placeholder = 'TODOLIST_PLACEHOLDER',\r\n}\r\n\r\nconst getRandomWording = (items: string[]) => {\r\n  const randomIndex = Math.floor(Math.random() * items.length)\r\n  return items[randomIndex]\r\n}\r\n\r\n/**\r\n * Create tab wordings\r\n */\r\nconst createTabWording = [\r\n  'Do handsome thing 😉',\r\n  '💪 Work hard, Play hard 👊',\r\n  'Design big plan 📄',\r\n]\r\n/**\r\n * Create todo wordings\r\n */\r\nconst createTodoWording = [\r\n  'Do handsome thing 😉',\r\n  '💪 Work hard, Play hard 👊',\r\n  'Write down small plan 🧐',\r\n]\r\n/**\r\n * Todo list placeholder\r\n */\r\nconst todoListPHWording = [\r\n  '😎 Great plan begins here',\r\n  '😮 Make handsome todo',\r\n  '🧐 Huh, you looks need to have fun thing',\r\n]\r\n\r\nexport const getWording = (type: wording_type) => {\r\n  switch(type) {\r\n    case wording_type.create_todo:\r\n      return getRandomWording(createTodoWording)\r\n\r\n    case wording_type.create_tab:\r\n      return getRandomWording(createTabWording)\r\n    \r\n    case wording_type.todolist_placeholder:\r\n      return getRandomWording(todoListPHWording)\r\n    \r\n    default:\r\n      return \"Write content\"\r\n      \r\n  }\r\n}","import { Button, withStyles } from '@material-ui/core';\r\n\r\nconst style = {\r\n  root: {\r\n    borderRadius: '0px',\r\n    boxShadow: 'none',\r\n  },\r\n}\r\n\r\nexport default withStyles(style)(Button)","import Todo from \"./Todo\";\r\n\r\nclass Tab {\r\n  id: number;\r\n  icon: string;\r\n  title: string;\r\n  todos: Todo[];\r\n\r\n  constructor(\r\n    icon: string = \"📃\",\r\n    title: string = \"그룹 이름 없음\",\r\n    todos: Todo[] = [],\r\n  ) {\r\n    this.id = getIndex()\r\n    this.icon = icon\r\n    this.title = title\r\n    this.todos = todos\r\n  }\r\n\r\n  setTitle(updatedTitle: string) {\r\n    this.title = updatedTitle\r\n    return this\r\n  }\r\n}\r\n\r\nexport type TTab = {\r\n  id: number;\r\n  icon: string;\r\n  title: string;\r\n  todos: Todo[];\r\n  setTitle: (updatedTitle: string) => void;\r\n}\r\n\r\n// Index\r\nlet index = 0\r\nconst getIndex = () => {\r\n  return index++\r\n}\r\n\r\nexport default Tab","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Popover,\r\n  InputBase,\r\n  Grid,\r\n  IconButton,\r\n  TextField\r\n} from '@material-ui/core'\r\nimport Button from 'styled-mui-components/Button'\r\nimport {\r\n  Check\r\n} from '@material-ui/icons'\r\nimport styles from 'components/IconEditor.module.scss'\r\n\r\nconst DEFAULT_ICONS = [\r\n  '💪',\r\n  '📖',\r\n  '🎮',\r\n  '🎨',\r\n  '📈',\r\n  '😥',\r\n  '⚽',\r\n  '🖤',\r\n  '📷',\r\n  '🥼',\r\n  '🎈',\r\n  '✨',\r\n  '🎃',\r\n]\r\n\r\ninterface IIconEditor {\r\n  open: boolean;\r\n  anchorEl: Element|null;\r\n  defaultIcon?: string;\r\n  onClose: () => void;\r\n  onConfirm: (editedIcon: string) => void;\r\n}\r\nconst IconEditor = ({\r\n  open,\r\n  anchorEl = null,\r\n  defaultIcon = \"\",\r\n  onClose,\r\n  onConfirm,\r\n}: IIconEditor) => {\r\n\r\n  // All icons\r\n  const [ icons, setIcons ] = useState<string[]>([])\r\n\r\n  // Current selected icon in icon-picker\r\n  const [ editingIcon, setEditingIcon ] = useState(defaultIcon)\r\n  // Current inputed icon\r\n  const [ inputedIcon, setInputedIcon ] = useState(\"\")\r\n\r\n  // Fetch icons\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIcons(DEFAULT_ICONS)\r\n    }, 300)\r\n  }, [])\r\n\r\n  // Update `editingIcon` state when update props\r\n  useEffect(() => {\r\n    setEditingIcon(defaultIcon)\r\n  }, [defaultIcon])\r\n\r\n  // Update state `editingIcon` when matched each `inputedIcon`, `editingIcon`\r\n  // if not matched, state `editingIcon` set to props `defaultIcon`\r\n  useEffect(() => {\r\n    if (inputedIcon) {\r\n      const findIcon = icons?.find(icon => icon === inputedIcon)\r\n      if (findIcon) {\r\n        setEditingIcon(findIcon)\r\n      }\r\n    } else {\r\n      setEditingIcon(defaultIcon)\r\n    }\r\n  }, [inputedIcon])\r\n\r\n  // On close popover\r\n  const _onClose = () => {\r\n    onClose()\r\n    setEditingIcon(defaultIcon)\r\n  }\r\n\r\n  // On icon-picker clicked\r\n  const onClickIconPicker = (clickedIcon: string) => {\r\n    setEditingIcon(clickedIcon)\r\n    onConfirm(clickedIcon)\r\n    _onClose()\r\n  }\r\n\r\n  // On input field input\r\n  const onInput = (e: any) => {\r\n    const { value } = e.target\r\n    if (value.length <= 2) {\r\n      setInputedIcon(value)\r\n    }\r\n  }\r\n  \r\n  // On input field keypress\r\n  const onInputKeyPress = (e: any) => {\r\n    const { key } = e\r\n    if (key === 'Enter' && inputedIcon.trim() !== \"\") {\r\n      onConfirmBtnClicked()\r\n    }\r\n  }\r\n\r\n  // On click confirm button\r\n  const onConfirmBtnClicked = () => {\r\n    onConfirm(inputedIcon.trim() !== \"\" ? inputedIcon : editingIcon)\r\n    _onClose()\r\n    const isNewIcon = !(icons?.find(icon => icon === inputedIcon))\r\n    if (isNewIcon) {\r\n      setIcons([inputedIcon].concat(icons))\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Popover className={styles.popover_content} open={open} \r\n      marginThreshold={0} // Remove margins\r\n      onClose={_onClose}\r\n      anchorEl={anchorEl}\r\n      transformOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}>\r\n      <div className={styles.popover_wrap}>\r\n        <div className={styles.icon_picker}>\r\n          {icons?.map(icon => (\r\n            <IconButton className={`${styles.icon} ${icon === editingIcon ? styles.selected : ''}`}\r\n              onClick={() => onClickIconPicker(icon)}>\r\n              {icon}\r\n            </IconButton>\r\n          ))\r\n          }\r\n        </div>\r\n        <div className={styles.input_icon}>\r\n          <TextField className={styles.input}\r\n            placeholder=\"Input emoji\" \r\n            value={inputedIcon}\r\n            onInput={onInput}\r\n            onKeyPress={onInputKeyPress} />\r\n          <Button className={styles.confirm_button} variant=\"contained\" color=\"primary\"\r\n            onClick={onConfirmBtnClicked}>\r\n            <Check />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Popover> \r\n  )\r\n}\r\n\r\nexport default IconEditor;","import { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button, Snackbar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport styles from 'components/TodoDialog.module.scss';\r\nimport Todo from 'types/Todo';\r\nimport { getWording, wording_type } from 'Wording';\r\n\r\nexport enum TodoDialogTypes {\r\n  Create = \"CREATE\",\r\n  Edit = \"EDIT\",\r\n}\r\ninterface TodoDialogInterface {\r\n  open: boolean;\r\n  type?: TodoDialogTypes;\r\n  todo?: Todo|null; // Binding when `editing type`\r\n  defaultText?: string;\r\n  onCreate?: any;\r\n  onUpdate?: any;\r\n  onEdit?: any;\r\n  onCancel?: any;\r\n}\r\nconst TodoDialog = ({\r\n  open,\r\n  type = TodoDialogTypes.Create,\r\n  todo,\r\n  defaultText = \"\",\r\n  onCreate,\r\n  onUpdate,\r\n  onCancel,\r\n}: TodoDialogInterface) => {\r\n\r\n  const {\r\n    title: _title = \"Write title\",\r\n  } = todo ? todo : {}\r\n  const isCreateMode = type === TodoDialogTypes.Create // Is create mode\r\n  \r\n  const [ title, setTitle ] = useState(defaultText) // Current editing `title` state\r\n  const [ showWarn, setShowWarn ] = useState(false) // Show restriction snack-bar state\r\n  const [ inputPlaceholder, setInputPlaceholder ] = useState(\"\") // Placeholder value for input field  state\r\n\r\n  // Fetch palceholder wording when state `open` is true\r\n  useEffect(() => {\r\n    if (!open) { // Set `inputPlaceholder` state to blank('') after 200ms for animation\r\n      setTimeout(() => {\r\n        setInputPlaceholder(\"\") \r\n      }, 200)\r\n    } else { // Set `inputPlaceholder` state to by `isCreateMode` flag \r\n      setInputPlaceholder(isCreateMode ? getWording(wording_type.create_todo) : _title)\r\n    }\r\n  }, [open])\r\n\r\n  useEffect(() => {\r\n    setTitle(defaultText)\r\n  }, [defaultText])\r\n\r\n  // Do create\r\n  const createTodo = (_title: string) => {\r\n    if (_title === \"\") { // Check blank\r\n      setShowWarn(true)\r\n      return\r\n    }\r\n    if (todo) { // In editing state\r\n      onUpdate && onUpdate({...todo,\r\n        title: _title,\r\n      })\r\n    } else {\r\n      const createdItem = new Todo(_title, false)\r\n      onCreate && onCreate(createdItem)\r\n    }\r\n    _onClose()\r\n  }\r\n\r\n  // On canceled\r\n  const _onClose = (e?: any) => {\r\n    onCancel && onCancel()\r\n    // setTitle(\"\")\r\n  }\r\n\r\n  // On confirm\r\n  const onConfirm = (e: object) => {\r\n    createTodo(title)\r\n  }\r\n\r\n  // Input on change\r\n  const onChange = (e: any) => {\r\n    const { value } = e.target\r\n    setTitle(value)\r\n  }\r\n\r\n  // Snackbar on close\r\n  const snackbarOnClose = () => {\r\n    setShowWarn(false)\r\n  }\r\n\r\n  const onKeyDown = (e: any) => {\r\n    const { key } = e\r\n    if (key === \"Enter\") {\r\n      createTodo(title)\r\n    }\r\n  }\r\n\r\n  // Displayed word in title prefix of dialog\r\n  const displayedTitlePrefix = isCreateMode ? \"Create\" : \"Edit\"\r\n  const displayedConfirmBtnText = isCreateMode ? \"Create\" : \"Update\"\r\n\r\n  return (\r\n    <Dialog className={styles.add_todo}\r\n      fullWidth={true}\r\n      open={open}\r\n      onClose={_onClose}>\r\n      <DialogTitle>{displayedTitlePrefix} todo</DialogTitle>\r\n      <DialogContent style={{padding: \"0px 24px 8px\"}}> {/* Remove top padding */}\r\n        <TextField autoFocus className={styles.input_todo} label=\"Title\" placeholder={inputPlaceholder}\r\n          value={title}\r\n          defaultValue={defaultText}\r\n          onKeyDown={onKeyDown}\r\n          onChange={onChange} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onConfirm}>\r\n          {displayedConfirmBtnText}\r\n        </Button>\r\n      </DialogActions>\r\n      <Snackbar open={showWarn} message=\"Todo is empty!\" autoHideDuration={2000} onClose={snackbarOnClose} />\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default TodoDialog","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Tab, { TTab } from 'types/Tab';\r\n\r\nimport styles from 'components/CreateTabDialog.module.scss'\r\nimport IconEditor from './IconEditor';\r\nimport { getWording, wording_type } from 'Wording';\r\n\r\ninterface ICreateTabDialog {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onCreate: (tab: TTab) => void;\r\n}\r\nconst CreateTabDialog = ({\r\n  open,\r\n  onClose,\r\n  onCreate,\r\n}: ICreateTabDialog) => {\r\n\r\n  // Anchor of `IconEditor` component\r\n  const [ iconEditorAnchor, setIconEditorAnchor ] = useState(null)\r\n  const DEFAULT_ICON = \"🖤\"\r\n\r\n  // Current editing `icon` state\r\n  const [ icon, setIcon ] = useState(DEFAULT_ICON)\r\n  const DEFAULT_TITLE = \"\"\r\n\r\n  // Current editing `title` state\r\n  const [ title, setTitle ] = useState(DEFAULT_TITLE)\r\n  const initializeStates = () => {\r\n    setIcon(DEFAULT_ICON)\r\n    setTitle(DEFAULT_TITLE)\r\n  }\r\n\r\n  // Input field placeholder\r\n  const [ placeholder, setPlaceholder ] = useState(\"\")\r\n  useEffect(() => {\r\n    if (!placeholder) {\r\n      setPlaceholder(getWording(wording_type.create_tab))\r\n    }\r\n  }, [])\r\n\r\n  const onInput = (e: any) => {\r\n    const { value } = e.target\r\n    setTitle(value)\r\n  }\r\n\r\n  // On confirm button clicked\r\n  const onConfirm = () => {\r\n    if (title.trim() === \"\") {\r\n      return\r\n    }\r\n    const createdTab = new Tab(icon, title, [])\r\n    onCreate(createdTab)\r\n  }\r\n\r\n  const onClickIconBtn = (e: any) => {\r\n    setIconEditorAnchor(e.target)\r\n  }\r\n\r\n  const onConfirmIconEditor = (icon: string) => {\r\n    setIcon(icon)\r\n    initializeStates()\r\n  }\r\n\r\n  const onTitleKeyPress = (e: any) => {\r\n    if (e.key === 'Enter') {\r\n      onConfirm()\r\n    }\r\n  }\r\n\r\n  const _showIconEditor = Boolean(iconEditorAnchor) // IconEdit\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth\r\n      onClose={onClose}>\r\n      <DialogTitle style={{paddingBottom: '12px'}}>Add tab</DialogTitle> {/* Reduce padding of bottom */}\r\n      <DialogContent className={styles.dialog_content}>\r\n        <IconButton className={styles.icon} color=\"primary\"\r\n          onClick={onClickIconBtn}>\r\n          {icon}\r\n        </IconButton>\r\n        <TextField autoFocus className={styles.title} label=\"Tab title\" variant=\"standard\" placeholder={placeholder}\r\n          value={title}\r\n          onInput={onInput}\r\n          onKeyPress={onTitleKeyPress} />\r\n        <IconEditor open={_showIconEditor}\r\n          anchorEl={iconEditorAnchor}\r\n          onClose={() => {setIconEditorAnchor(null)}}\r\n          onConfirm={onConfirmIconEditor} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onConfirm}>\r\n          CREATE\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default CreateTabDialog","import React, { useEffect, useState } from 'react';\r\nimport styles from 'components/TabList.module.scss';\r\nimport Tab, { TTab } from 'types/Tab';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from 'styled-mui-components/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField } from '@material-ui/core';\r\nimport CreateTabDialog from './CreateTabDialog';\r\n\r\ninterface ITabList {\r\n  open: boolean;\r\n  tabs: TTab[];\r\n  onTabClick: (tab: TTab) => void;\r\n  onTabCreate: (tab: TTab) => void;\r\n}\r\nconst TabList = ({\r\n  open,\r\n  tabs,\r\n  onTabClick,\r\n  onTabCreate,\r\n}: ITabList) => {\r\n\r\n  const [ showCreateTab, setShowCreateTab ] = useState(false)\r\n\r\n  // On tab clicked\r\n  const _onTabClick = (id: number) => {\r\n    const tab = tabs.find(_tab => _tab.id === id)\r\n    if (tab) {\r\n      onTabClick(tab)\r\n    }\r\n  }\r\n\r\n  // On add-tab button clicked\r\n  const onClickAddTab = (e: any) => {\r\n    e.stopPropagation()\r\n    setShowCreateTab(true)\r\n  }\r\n\r\n  // On CreateTabDialog closed\r\n  const onCloseCreateTab = () => {\r\n    setShowCreateTab(false)\r\n  }\r\n\r\n  const _onTabCreate = (tab: TTab) => {\r\n    onTabCreate(tab)\r\n    setShowCreateTab(false)\r\n  }\r\n  \r\n  return (<>\r\n    <Button className={styles.add_tab} variant=\"contained\" color=\"primary\"\r\n      onClick={onClickAddTab}>\r\n      <Typography variant=\"h5\">➕ add tab</Typography>\r\n    </Button>\r\n    <ul className={`${styles.tabs} ${open ? styles.open : ''}`}>\r\n      {tabs?.map(tab => (\r\n        <TabItem {...tab} \r\n          onClick={_onTabClick} />\r\n      ))}\r\n    </ul>\r\n\r\n    <CreateTabDialog open={showCreateTab}\r\n      onClose={onCloseCreateTab}\r\n      onCreate={_onTabCreate} />\r\n  </>)\r\n}\r\n\r\ninterface IGroup extends TTab {\r\n  // setTitle?: any;\r\n  onClick: (id: number) => void;\r\n}\r\nconst TabItem = ({\r\n  id,\r\n  icon,\r\n  title,\r\n  onClick,\r\n}: IGroup) => {\r\n\r\n  const [isHover, setIsHover] = useState(false)\r\n\r\n  return (\r\n    <Button className={`${styles.tab} ${isHover ? styles.hover : ''}`} variant=\"contained\" color=\"primary\"\r\n      onClick={() => onClick(id)}\r\n      onMouseEnter={() => setIsHover(true)}\r\n      onMouseLeave={() => setIsHover(false)}>\r\n      <div className={styles.label_wrap}>\r\n        <div className={styles.icon}>{icon}</div>\r\n        <Typography className={styles.title} variant=\"h5\">{title}</Typography>\r\n      </div>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default TabList","import React, { useEffect, useState } from 'react';\r\nimport styles from 'components/SideBar.module.scss';\r\n\r\ninterface ISideBar {\r\n  children?: any;\r\n  open: boolean;\r\n  onClose?: () => void;\r\n}\r\nconst SideBar = ({\r\n  children,\r\n  open,\r\n  onClose,\r\n}: ISideBar) => {\r\n\r\n  \r\n  const [ _open, setOpen ] = useState(false)\r\n  const [ runAnimation, setRunAnimation ] = useState(false)\r\n  const ANIMATION_MS = 200\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setOpen(true)\r\n    } else {\r\n      setRunAnimation(false)\r\n      setTimeout(() => {\r\n        setOpen(false)\r\n      }, ANIMATION_MS)\r\n    }\r\n  }, [open])\r\n\r\n  useEffect(() => {\r\n    if (_open) {\r\n      setRunAnimation(true)\r\n    } \r\n  }, [_open])\r\n\r\n  const _onClose = (e: any) => {\r\n    const { target, currentTarget } = e\r\n    if (target === currentTarget) {\r\n      onClose && onClose()\r\n    }\r\n  }\r\n\r\n  return _open ? (\r\n    <div className={`${styles.side_bar} ${_open ? styles.show : ''} ${runAnimation ? styles.open : ''}`}\r\n      onClick={_onClose}>\r\n      {children}\r\n    </div>\r\n  ) : null\r\n  \r\n}\r\n\r\nexport default SideBar\r\n","class Todo {\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n\r\n  constructor(\r\n    title: string,\r\n    completed: boolean,\r\n    ) {\r\n    this.id = getIndex();\r\n    this.title = title;\r\n    this.completed = completed;\r\n  }\r\n}\r\n\r\nexport interface ITodo {\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n}\r\n\r\n// Index\r\nlet index = 0\r\nconst getIndex = () => {\r\n  return index++\r\n}\r\n\r\nexport default Todo","import { Check } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport Button from 'styled-mui-components/Button';\r\n\r\nimport styles from 'components/common/CheckboxButton.module.scss';\r\n\r\ninterface ICheckboxButton {\r\n  checked?: boolean;\r\n  onChange?: Function;\r\n}\r\n\r\nconst buttonStyle = {\r\n  minWidth: '50px',\r\n  width: '50px',\r\n  height: '50px',\r\n  padding: '0px',\r\n  borderRadius: '50%',\r\n}\r\n\r\nconst CheckboxButton = ({checked, onChange}: ICheckboxButton) => {\r\n\r\n  const buttonOnClicked = (e: any) => {\r\n    e.stopPropagation()\r\n    onChange && onChange(!checked)\r\n  }\r\n\r\n  return (\r\n    <Button disableRipple className={styles.checkbox_btn} style={buttonStyle}\r\n      onClick={buttonOnClicked}>\r\n      <div className={styles.circle}></div>\r\n      <Check className={`${styles.check} ${checked ? styles.show  : ''}`} color=\"primary\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default CheckboxButton","import React from 'react';\r\nimport { Box, IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Paper, Typography } from '@material-ui/core';\r\nimport CheckboxButton from './common/CheckboxButton';\r\nimport styles from 'components/todoList.module.scss'\r\nimport { Delete } from '@material-ui/icons';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Todo from 'types/Todo';\r\nimport { getWording, wording_type } from 'Wording';\r\n\r\ninterface ITodoList {\r\n  items: Todo[];\r\n  onEdit?: any;\r\n  onCheckChange: any;\r\n  onDelete: any;\r\n  onCreateAction: () => void;\r\n}\r\nconst TodoList = ({\r\n  items,\r\n  onEdit,\r\n  onCheckChange,\r\n  onDelete,\r\n  onCreateAction,\r\n}: ITodoList) => {\r\n\r\n  const isItemsExist = items.length > 0\r\n\r\n  const todoListPlaceHolder = \"🤷‍♂️ Make a todo 🤷‍♀️\"\r\n  // const todoListPlaceHolder = isItemsExist ? null : getWording(wording_type.todolist_placeholder)\r\n\r\n  return (\r\n    <List className={styles.list}>\r\n      {isItemsExist ? items.map( item => (\r\n        <Item {...item}\r\n          onClick={onEdit}\r\n          onCheckChange={onCheckChange}\r\n          onDelete={onDelete} />\r\n      )) : (\r\n        <div className={styles.create_todo_desc}>\r\n          <Typography className={styles.text} variant=\"h5\" color=\"primary\"\r\n            onClick={() => onCreateAction()} >\r\n            {todoListPlaceHolder}\r\n          </Typography>\r\n        </div>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\ninterface ListItemInterface {\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n  onClick: any;\r\n  onCheckChange: any;\r\n  onDelete: any;\r\n}\r\nconst Item = ({\r\n  id,\r\n  title,\r\n  completed,\r\n  onClick,\r\n  onCheckChange,\r\n  onDelete,\r\n}: ListItemInterface) => {\r\n\r\n  const _onClick = () => {\r\n    onClick(id)\r\n  }\r\n  \r\n  const onClickDelete = () => {\r\n    onDelete(id)\r\n  }\r\n\r\n  const _onCheckChange = (value: boolean) => {\r\n    onCheckChange(id, value)\r\n  }\r\n\r\n  return (\r\n    <ListItem onClick={_onClick} button>\r\n      <ListItemIcon>\r\n        <CheckboxButton onChange={_onCheckChange} checked={completed} />\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={<ListItemTypo text={title}/>}\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <IconButton onClick={onClickDelete} color=\"primary\">\r\n          <Delete className={styles.item_secondary_icon}/>\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\ninterface ListItemTypeInterface {\r\n  text: string;\r\n}\r\nconst ListItemTypoStyle = {\r\n\r\n}\r\nconst _ListItemType = ({text}: ListItemTypeInterface) => {\r\n  return (\r\n    <Typography className={styles.item_content} variant=\"h5\" color=\"primary\">{text}</Typography>\r\n  )\r\n}\r\nconst ListItemTypo = withStyles(ListItemTypoStyle)(_ListItemType)\r\n\r\nexport default TodoList","import { Add } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nimport styles from 'components/AddTodoButton.module.scss';\r\nimport { Fab } from '@material-ui/core';\r\n\r\ninterface AddTodoButtonInterface {\r\n  onClick: any;\r\n}\r\nconst AddTodoButton = ({\r\n  onClick\r\n}: AddTodoButtonInterface) => {\r\n\r\n  const _onClick = () => {\r\n    onClick()\r\n  }\r\n\r\n  return (\r\n    <Fab className={styles.add_button} onClick={_onClick} aria-label=\"create todo\">\r\n      <Add />\r\n    </Fab>\r\n  )\r\n}\r\n\r\nexport default AddTodoButton","import React, { useState } from 'react';\r\nimport TodoList from './todoList';\r\n\r\nimport styles from 'components/body.module.scss';\r\nimport AddTodoButton from './AddTodoButton';\r\nimport Todo, { ITodo } from 'types/Todo';\r\nimport TodoDialog, { TodoDialogTypes } from './TodoDialog';\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\ninterface IBody {\r\n  todos: Todo[];\r\n  onTodoDeleted: (id: number) => void;\r\n  onTodoEdited: (todo: Todo) => void;\r\n  onTodoCreated: (todo: Todo) => void;\r\n}\r\nconst Body = ({\r\n  todos,\r\n  onTodoDeleted,\r\n  onTodoEdited,\r\n  onTodoCreated,\r\n}: IBody) => {\r\n\r\n  const [ editingTodo, setEditingTodo ] = useState<Todo|null>(null)\r\n\r\n  const [ showTodoDialog, setShowTodoDialog ] = useState<boolean>(false)\r\n\r\n  const [ showWarn, setShowWarn ] = useState(false)\r\n\r\n\r\n  // On add-todo button clicked\r\n  const addBtnClicked = () => {\r\n    setEditingTodo(null)\r\n    setShowTodoDialog(true)\r\n  }\r\n\r\n  // On dialog canceled\r\n  const onCancel = () => {\r\n    setShowTodoDialog(false) // Dialog off\r\n  }\r\n\r\n  const _setEditingTodo = (id: number) => {\r\n    if (todos) {\r\n      const targetTodo = todos.find(todo => (todo.id === id))\r\n      \r\n      if (targetTodo) {\r\n        setEditingTodo(targetTodo)\r\n        setShowTodoDialog(true)\r\n      } else {\r\n        setShowWarn(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  // On snackbar closed\r\n  const snackbarOnClose = () => {\r\n    setShowWarn(false)\r\n  }\r\n\r\n  // On todo created\r\n  const _onTodoCreated = (todo: Todo) => {\r\n    onTodoCreated(todo)\r\n\r\n    setTimeout(() => { // Must be fix (state not updated issue)\r\n      setShowTodoDialog(false)\r\n    }, 100)\r\n  }\r\n\r\n  const _onTodoEdited = (todo: Todo) => {\r\n    onTodoEdited(todo)\r\n  }\r\n\r\n  // On todo checked\r\n  const onTodoChecked = (id: number, checked: boolean) => {\r\n    if (todos) {\r\n      const targetTodo = todos.find(todo => (todo.id === id))\r\n      if (!targetTodo) {\r\n        console.error('onTodoChecked - todo not finded!!')\r\n        return\r\n      }\r\n  \r\n      const assignedTodo = {...targetTodo,\r\n        completed: checked\r\n      }\r\n      onTodoEdited(assignedTodo)\r\n    }\r\n  }\r\n\r\n  const dialogType = editingTodo ? TodoDialogTypes.Edit : TodoDialogTypes.Create\r\n  const dialogDefaultText = editingTodo ? editingTodo.title : undefined\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <TodoList items={todos}\r\n        onEdit={_setEditingTodo}\r\n        onCheckChange={onTodoChecked}\r\n        onDelete={onTodoDeleted}\r\n        onCreateAction={() => addBtnClicked()} />\r\n      <AddTodoButton onClick={addBtnClicked} />\r\n\r\n      <TodoDialog open={showTodoDialog}\r\n        type={dialogType}\r\n        todo={editingTodo}\r\n        onUpdate={_onTodoEdited}\r\n        defaultText={dialogDefaultText}\r\n        onCreate={_onTodoCreated}\r\n        onCancel={onCancel} />\r\n\r\n      <Snackbar open={showWarn} message=\"Oops, somethings wrong\" autoHideDuration={2000} onClose={snackbarOnClose}  />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Popover,\r\n  InputBase\r\n} from '@material-ui/core'\r\nimport Button from 'styled-mui-components/Button'\r\nimport {\r\n  Check\r\n} from '@material-ui/icons'\r\nimport styles from 'components/TitleEditor.module.scss'\r\n\r\ninterface ITitleEditor {\r\n  open: boolean;\r\n  anchorEl: Element|null;\r\n  defaultTitle?: string;\r\n  onClose: () => void;\r\n  onConfirm: (editedTitle: string) => void;\r\n}\r\nconst TitleEditor = ({\r\n  open,\r\n  anchorEl = null,\r\n  defaultTitle = \"\",\r\n  onClose,\r\n  onConfirm,\r\n}: ITitleEditor) => {\r\n\r\n  const [ editingTitle, setEditingTitle ] = useState(defaultTitle)\r\n  const onChangeEditingTitle = (e: any) => {\r\n    const { value } = e.currentTarget\r\n    setEditingTitle(value)\r\n  }\r\n  \r\n  // Update `editingTitle` state when update props\r\n  useEffect(() => {\r\n    setEditingTitle(defaultTitle)\r\n  }, [defaultTitle])\r\n\r\n  // On close popover\r\n  const _onClose = () => {\r\n    onClose()\r\n  }\r\n  \r\n  // On click confirm button\r\n  const onConfirmBtnClicked = () => {\r\n    onConfirm(editingTitle)\r\n    _onClose()\r\n  }\r\n\r\n  const onInputKeyPress = (e: any) => {\r\n    if (e.key === 'Enter') { // On enter\r\n      onConfirmBtnClicked()\r\n    }\r\n  }\r\n\r\n  const placeHolder = defaultTitle ? defaultTitle : 'Input text to update!'\r\n\r\n  return (\r\n    <Popover className={styles.popover_content} open={open} \r\n      marginThreshold={0} // Remove margins\r\n      onClose={_onClose}\r\n      anchorEl={anchorEl}\r\n      transformOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}>\r\n      <InputBase\r\n        autoFocus={true}\r\n        value={editingTitle}\r\n        onChange={onChangeEditingTitle}\r\n        onKeyPress={onInputKeyPress}\r\n        className={styles.edit_title}\r\n        placeholder={placeHolder}\r\n      />\r\n      <Button className={styles.confirm_button}\r\n        onClick={onConfirmBtnClicked}>\r\n        <Check color=\"primary\" style={{fontSize: '36px'}} />\r\n      </Button>\r\n    </Popover> \r\n  )\r\n}\r\n\r\nexport default TitleEditor;","import React, { useState } from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport styles from 'components/header.module.scss';\r\nimport Button from '../styled-mui-components/Button';\r\nimport Tab, { TTab } from 'types/Tab';\r\nimport { Grid, IconButton, Input, InputBase, Popover, TextField, Typography } from '@material-ui/core';\r\nimport { Check } from '@material-ui/icons';\r\nimport TitleEditor from './TitleEditor';\r\nimport IconEditor from './IconEditor';\r\n\r\ninterface IHeader {\r\n  tab: TTab|null;\r\n  onTabClick?: () => void;\r\n  onEditTitle: (editedTitle: string) => void;\r\n  onEditIcon: (editedIcon: string) => void;\r\n}\r\nconst Header = ({\r\n  tab,\r\n  onTabClick,\r\n  onEditTitle,\r\n  onEditIcon,\r\n}: IHeader) => {\r\n\r\n  const [ titleAnchorEl, setTitleAnchorEl ] = useState(null)\r\n  const [ iconAnchorEl, setIconAnchorEl ] = useState(null)\r\n\r\n  const {\r\n    icon,\r\n    title,\r\n  } = tab ?? {}\r\n\r\n  // On click title\r\n  const onClickTitle = (e: any) => {\r\n    setTitleAnchorEl(e.currentTarget)\r\n  }\r\n\r\n  // On click icon\r\n  const onClickIcon = (e: any) => {\r\n    setIconAnchorEl(e.currentTarget)\r\n  }\r\n  \r\n  // On `TitleEditor` closed\r\n  const onCloseTitleEditor = () => {\r\n    setTitleAnchorEl(null)\r\n  }\r\n\r\n  // On `IconEditor` closed\r\n  const onCloseIconEditor = () => {\r\n    setIconAnchorEl(null)\r\n  }\r\n\r\n  const showTitleEditor = Boolean(titleAnchorEl)\r\n  const showIconEditor = Boolean(iconAnchorEl)\r\n\r\n  return (\r\n    <div className={styles.header}>\r\n      <Button className={styles.menu} variant=\"contained\" color=\"primary\"\r\n        onClick={onTabClick}>\r\n        <MenuIcon style={{fontSize: '36px'}} />\r\n      </Button>\r\n      {tab ? (\r\n        <div className={styles.title_wrap}>\r\n          <IconButton className={styles.icon} color=\"primary\"\r\n            onClick={onClickIcon}>\r\n            {icon}\r\n          </IconButton>\r\n          <IconEditor open={showIconEditor}\r\n            defaultIcon={icon}\r\n            anchorEl={iconAnchorEl}\r\n            onClose={onCloseIconEditor}\r\n            onConfirm={onEditIcon} />\r\n\r\n          <Button className={styles.title} onClick={onClickTitle}>\r\n            {title}\r\n          </Button>\r\n          <TitleEditor open={showTitleEditor}\r\n            defaultTitle={title}\r\n            anchorEl={titleAnchorEl}\r\n            onClose={onCloseTitleEditor}\r\n            onConfirm={onEditTitle} />\r\n        </div>\r\n      ) : (\r\n        <p> Try create group! </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import { Dialog, DialogActions, DialogContent, DialogTitle, Snackbar, TextField, Typography } from '@material-ui/core';\r\nimport { Check } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport Button from 'styled-mui-components/Button';\r\n\r\n// import styles from 'components/SettingDialog.module.scss'\r\n\r\ninterface ISettingDialog {\r\n  open: boolean;\r\n  onConfirm: () => void;\r\n  onClose: () => void;\r\n}\r\nconst SettingDialog = ({\r\n  open,\r\n  onConfirm,\r\n  onClose,\r\n}: ISettingDialog) => {\r\n\r\n  const _onClose = () => {\r\n    onClose()\r\n  }\r\n\r\n  const _onConfirm = () => {\r\n    onConfirm()\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open}\r\n      fullWidth={true}\r\n      onClose={_onClose}>\r\n      <DialogTitle>Settings</DialogTitle>\r\n      <DialogContent>\r\n        <Typography> Currently cannot customize todo app 😴 </Typography>\r\n        <Typography> ts-todo-app v0.1.0  </Typography>\r\n        {/* <Typography> </Typography> */}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={_onConfirm}>\r\n          <Check />\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default SettingDialog","import { CircularProgress, Typography } from '@material-ui/core';\r\nimport TabList from 'components/TabList';\r\nimport SideBar from 'components/SideBar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Tab, { TTab } from 'types/Tab';\r\nimport Todo, { ITodo } from 'types/Todo';\r\nimport styles from './app.module.scss';\r\nimport Body from './components/body';\r\nimport Header from './components/header';\r\nimport { Settings } from '@material-ui/icons';\r\nimport Button from 'styled-mui-components/Button';\r\nimport SettingDialog from 'components/SettingDialog';\r\n\r\nconst TODOS_DAILY_TASKS: ITodo[] = [\r\n  new Todo('저녁에 운동하기', false),\r\n  new Todo('유튜브 영상 보기', false),\r\n  new Todo('방 청소하기', false),\r\n]\r\nconst TODOS_STUDY: ITodo[] = [\r\n  new Todo('강의 듣기', false),\r\n]\r\nconst TODOS_GAMES: ITodo[] = [\r\n  new Todo('Marvel\\'s Spider-Man', false),\r\n  new Todo('Last of us', false),\r\n  new Todo('롤 그마', false),\r\n  new Todo('몬헌', false),\r\n]\r\n\r\nconst TABS:TTab[] = [\r\n  new Tab('💪', 'Daily tasks', TODOS_DAILY_TASKS),\r\n  new Tab('📖', 'Study', TODOS_STUDY),\r\n  new Tab('🎮', 'Games', TODOS_GAMES),\r\n]\r\n\r\nfunction App() {\r\n\r\n  const [ showSidebar, setShowSidebar ] = useState<boolean>(false)\r\n  \r\n  // All todo datas\r\n  const [ tabs, setTabs ] = useState<TTab[]|null>(null)\r\n  const [ tabSelection, setTabSelection ] = useState<TTab|null>(null)\r\n  const updateTodos = (todos:Todo[]) => {\r\n    if (tabSelection) {\r\n      setTabSelection({...tabSelection,\r\n        todos: todos,\r\n      })\r\n    }\r\n  }\r\n  \r\n  const [ showSettings, setShowSettings ] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    if (!tabs) { // When initialize\r\n      setTimeout(() => {\r\n        setTabs(TABS)\r\n        if (TABS[0]) { // If tab exist then, binding todos\r\n          setTabSelection(TABS[0])\r\n        }\r\n      }, 300)\r\n    }\r\n  }, [])\r\n\r\n  // On initialized `data` state\r\n  useEffect(() => {\r\n    \r\n  }, [tabs])\r\n\r\n  const deleteTodo = (id: number) => {\r\n    if (tabSelection) {\r\n      const { todos } = tabSelection\r\n      updateTodos(todos.filter(todo => (todo.id !== id)))\r\n    }\r\n  }\r\n\r\n  // On todo created in todo-dialog\r\n  const onTodoCreated = (todo: Todo) => {\r\n    if (tabSelection) {\r\n      const { todos } = tabSelection\r\n      updateTodos([todo].concat(todos))\r\n    }\r\n  }\r\n\r\n  // // On todo check changed\r\n  // const onTodoChecked = (id: number, value: boolean) => {\r\n  //   updateCheckedTodo(id, value)\r\n  // }\r\n\r\n  // On todo delete\r\n  const onTodoDeleted = (id: number) => {\r\n    deleteTodo(id)\r\n  }\r\n\r\n  // On todo edited\r\n  const onTodoEdited = (updatedTodo: Todo) => {\r\n    if (tabSelection) {\r\n      const { todos } = tabSelection\r\n      const result = todos.map(todo => {\r\n        if (todo.id === updatedTodo.id) {\r\n          return updatedTodo\r\n        }\r\n        return todo\r\n      })\r\n  \r\n      updateTodos(result)\r\n    }\r\n  }\r\n\r\n  // On menu clicked in header\r\n  const onTabClicked = () => {\r\n    setShowSidebar(true)\r\n  }\r\n\r\n  // On SideBar closed\r\n  const onSidebarClose = () => {\r\n    setShowSidebar(false)\r\n  }\r\n\r\n  // On tab clicked\r\n  const onTabClick = (tab: TTab) => {\r\n    if (tabs) {\r\n      const { id:currentTabId } = tabSelection ?? {}\r\n      const updatedTabs = tabs.map(_tab => (\r\n        _tab.id === currentTabId ? tabSelection ?? _tab : _tab\r\n      ))\r\n\r\n      setTabs(updatedTabs)\r\n      setTabSelection(tab)\r\n    }\r\n    setShowSidebar(false)\r\n  }\r\n\r\n  // On tab create from TabList component\r\n  const onTabCreate = (tab: TTab) => {\r\n    setShowSidebar(false)\r\n    setTabs([tab].concat(tabs ?? []))\r\n    setTabSelection(tab)\r\n  }\r\n\r\n  // On edit title of tab\r\n  const onEditTitle = (editedTitle: string) => {\r\n    if (tabs && tabSelection) {\r\n      const updatedTab = {...tabSelection,\r\n        title: editedTitle,\r\n      }\r\n      setTabs(tabs.map(tab => (  // Update state tabs\r\n        tab.id === tabSelection.id ? updatedTab : tab\r\n      )))\r\n      setTabSelection(updatedTab)\r\n    }\r\n  }\r\n\r\n  // On edit icon of tab\r\n  const onEditIcon = (editedIcon: string) => {\r\n    if (tabs && tabSelection) {\r\n      const updatedTab = {...tabSelection,\r\n        icon: editedIcon,\r\n      }\r\n      setTabs(tabs.map(tab => (  // Update state tabs\r\n        tab.id === tabSelection.id ? updatedTab : tab\r\n      )))\r\n      setTabSelection(updatedTab)\r\n    }\r\n  }\r\n\r\n  const onSettingsConfirm = () => {\r\n    \r\n  }\r\n\r\n  const todos = tabSelection?.todos ?? []\r\n\r\n  return (<>\r\n    <div className={styles.App}>{tabs ? (<>\r\n      <Header tab={tabSelection}\r\n        onTabClick={onTabClicked}\r\n        onEditTitle={onEditTitle}\r\n        onEditIcon={onEditIcon} />\r\n      {todos && (\r\n        <Body todos={todos}\r\n          onTodoCreated={onTodoCreated}\r\n          onTodoDeleted={onTodoDeleted}\r\n          onTodoEdited={onTodoEdited} />\r\n      )}\r\n      {/* <Typography variant=\"h5\" color=\"primary\" style={{marginTop: '50px'}}> Try create group! </Typography> */}\r\n    </>) : (\r\n      <CircularProgress />\r\n      // <Typography variant=\"h4\" color=\"primary\">Loading ..</Typography>\r\n    )}\r\n    \r\n    <SideBar open={showSidebar}\r\n      onClose={onSidebarClose}>\r\n      {tabs && (\r\n        <TabList open={showSidebar}\r\n          tabs={tabs}\r\n          onTabClick={onTabClick}\r\n          onTabCreate={onTabCreate} />\r\n      )}\r\n      <Button className={styles.setting_btn} variant=\"contained\" color=\"primary\"\r\n        onClick={() => setShowSettings(true)} >\r\n        <Settings fontSize=\"medium\" />\r\n      </Button>\r\n    </SideBar>\r\n\r\n    <SettingDialog open={showSettings}\r\n      onClose={() => setShowSettings(false)}\r\n      onConfirm={onSettingsConfirm} />\r\n\r\n    </div>\r\n  </>);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3F4F50',\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core';\nimport AppTheme from './AppTheme';\n\nReactDOM.render(\n  <ThemeProvider theme={AppTheme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_tab\":\"TabList_add_tab__1KvMb\",\"tabs\":\"TabList_tabs__3Jkgq\",\"open\":\"TabList_open__11GgD\",\"tab\":\"TabList_tab__3fgE5\",\"label_wrap\":\"TabList_label_wrap__2Us2_\",\"icon\":\"TabList_icon__1PS2E\",\"title\":\"TabList_title__2BOSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popover_content\":\"IconEditor_popover_content__-FvIv\",\"popover_wrap\":\"IconEditor_popover_wrap__27UTa\",\"icon_picker\":\"IconEditor_icon_picker__yncGF\",\"icon\":\"IconEditor_icon__wxiU7\",\"selected\":\"IconEditor_selected__2iQIx\",\"input_icon\":\"IconEditor_input_icon__3lUd2\",\"input\":\"IconEditor_input__1nfUr\",\"confirm_button\":\"IconEditor_confirm_button__C6cvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"todoList_list__3Q0Ds\",\"create_todo_desc\":\"todoList_create_todo_desc__1bMpl\",\"text\":\"todoList_text__31hpu\",\"item_content\":\"todoList_item_content__1tEVm\",\"item_secondary_icon\":\"todoList_item_secondary_icon__3AG4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__17T4t\",\"menu\":\"header_menu__191km\",\"title_wrap\":\"header_title_wrap__1jYM2\",\"icon\":\"header_icon__3Lb2m\",\"title\":\"header_title__38zi_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox_btn\":\"CheckboxButton_checkbox_btn__A0Vfu\",\"circle\":\"CheckboxButton_circle__xqcKC\",\"check\":\"CheckboxButton_check___OOOS\",\"show\":\"CheckboxButton_show__2WeYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_content\":\"CreateTabDialog_dialog_content__3dqYf\",\"icon\":\"CreateTabDialog_icon__11bSz\",\"title\":\"CreateTabDialog_title__1XXMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side_bar\":\"SideBar_side_bar__1KyUU\",\"show\":\"SideBar_show__Yqbgx\",\"open\":\"SideBar_open__1-wSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popover_content\":\"TitleEditor_popover_content__21Feh\",\"edit_title\":\"TitleEditor_edit_title__1ZzOu\",\"confirm_button\":\"TitleEditor_confirm_button__SHRdf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__13EnN\",\"setting_btn\":\"app_setting_btn__3YU_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_todo\":\"TodoDialog_add_todo__B4QSh\",\"input_todo\":\"TodoDialog_input_todo__2TnTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"body_body__1jaDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_button\":\"AddTodoButton_add_button__vLuI4\"};"],"sourceRoot":""}