{"version":3,"sources":["components/TodoDialog.tsx","styled-mui-components/Button.tsx","types/Tab.ts","components/IconEditor.tsx","components/CreateTabDialog.tsx","components/TabList.tsx","components/SideBar.tsx","types/Todo.ts","components/common/CheckboxButton.tsx","components/todoList.tsx","components/AddTodoButton.tsx","components/body.tsx","components/TitleEditor.tsx","components/header.tsx","App.tsx","reportWebVitals.ts","AppTheme.ts","index.tsx","components/TabList.module.scss","components/IconEditor.module.scss","components/header.module.scss","components/common/CheckboxButton.module.scss","components/CreateTabDialog.module.scss","components/SideBar.module.scss","components/todoList.module.scss","components/TitleEditor.module.scss","components/TodoDialog.module.scss","app.module.scss","components/body.module.scss","components/AddTodoButton.module.scss"],"names":["TodoDialogTypes","withStyles","root","borderRadius","boxShadow","Button","Tab","icon","title","todos","id","this","getIndex","updatedTitle","index","DEFAULT_ICONS","IconEditor","open","anchorEl","defaultIcon","onClose","onConfirm","useState","icons","setIcons","editingIcon","setEditingIcon","inputedIcon","setInputedIcon","useEffect","setTimeout","findIcon","find","_onClose","onConfirmBtnClicked","trim","concat","Popover","className","styles","popover_content","marginThreshold","transformOrigin","vertical","horizontal","popover_wrap","icon_picker","map","IconButton","selected","onClick","clickedIcon","input_icon","TextField","input","placeholder","value","onInput","e","target","length","onKeyPress","key","confirm_button","variant","color","Check","CreateTabDialog","onCreate","iconEditorAnchor","setIconEditorAnchor","setIcon","setTitle","createdTab","_showIconEditor","Boolean","Dialog","fullWidth","DialogTitle","style","paddingBottom","DialogContent","dialog_content","autoFocus","label","DialogActions","TabItem","isHover","setIsHover","tab","hover","onMouseEnter","onMouseLeave","label_wrap","Typography","TabList","tabs","onTabClick","onTabCreate","showCreateTab","setShowCreateTab","_onTabClick","_tab","add_tab","stopPropagation","SideBar","children","_open","setOpen","runAnimation","setRunAnimation","side_bar","show","currentTarget","Todo","completed","buttonStyle","minWidth","width","height","padding","CheckboxButton","checked","onChange","disableRipple","checkbox_btn","circle","check","Item","onCheckChange","onDelete","ListItem","button","ListItemIcon","ListItemText","primary","ListItemTypo","text","ListItemSecondaryAction","Delete","item_secondary_icon","item_content","TodoList","items","onEdit","isItemsExist","List","list","item","AddTodoButton","Fab","add_button","Add","TodoDialog","type","Create","todo","defaultText","onUpdate","onCancel","showWarn","setShowWarn","createTodo","_title","createdItem","_onCancel","displayedTitlePrefix","displayedConfirmBtnText","add_todo","input_todo","defaultValue","onKeyDown","Snackbar","message","autoHideDuration","Body","onTodoDeleted","onTodoEdited","onTodoCreated","editingTodo","setEditingTodo","showTodoDialog","setShowTodoDialog","dialogType","Edit","dialogDefaultText","undefined","body","targetTodo","console","error","assignedTodo","TitleEditor","defaultTitle","editingTitle","setEditingTitle","placeHolder","InputBase","edit_title","fontSize","Header","onEditTitle","onEditIcon","titleAnchorEl","setTitleAnchorEl","iconAnchorEl","setIconAnchorEl","showTitleEditor","showIconEditor","header","menu","title_wrap","TODOS_DAILY_TASKS","TODOS_STUDY","TODOS_GAMES","TABS","App","showSidebar","setShowSidebar","setTabs","tabSelection","setTabSelection","updateTodos","editedTitle","updatedTab","editedIcon","filter","deleteTodo","updatedTodo","result","currentTabId","updatedTabs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","main","ReactDOM","render","ThemeProvider","AppTheme","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f224d07d.chunk.js","sourcesContent":["import { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button, Snackbar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport styles from 'components/TodoDialog.module.scss';\r\nimport Todo from 'types/Todo';\r\n\r\nexport enum TodoDialogTypes {\r\n  Create = \"CREATE\",\r\n  Edit = \"EDIT\",\r\n}\r\ninterface TodoDialogInterface {\r\n  show: boolean;\r\n  type?: TodoDialogTypes;\r\n  todo?: Todo|null; // Binding when `editing type`\r\n  defaultText?: string;\r\n  onCreate?: any;\r\n  onUpdate?: any;\r\n  onEdit?: any;\r\n  onCancel?: any;\r\n}\r\nconst TodoDialog = ({\r\n  show,\r\n  type = TodoDialogTypes.Create,\r\n  todo,\r\n  defaultText = \"\",\r\n  onCreate,\r\n  onUpdate,\r\n  onCancel,\r\n}: TodoDialogInterface) => {\r\n  \r\n  const [ title, setTitle ] = useState(defaultText)\r\n  const [ showWarn, setShowWarn ] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setTitle(defaultText)\r\n  }, [defaultText])\r\n\r\n  // Do create\r\n  const createTodo = (_title: string) => {\r\n    if (_title === \"\") { // Check blank\r\n      setShowWarn(true)\r\n      return\r\n    }\r\n    if (todo) { // In editing state\r\n      onUpdate && onUpdate({...todo,\r\n        title: _title,\r\n      })\r\n    } else {\r\n      const createdItem = new Todo(_title, false)\r\n      onCreate && onCreate(createdItem)\r\n    }\r\n    _onCancel()\r\n  }\r\n\r\n  // On canceled\r\n  const _onCancel = (e?: any) => {\r\n    onCancel && onCancel()\r\n    // setTitle(\"\")\r\n  }\r\n\r\n  // On confirm\r\n  const onConfirm = (e: object) => {\r\n    createTodo(title)\r\n  }\r\n\r\n  // Input on change\r\n  const onChange = (e: any) => {\r\n    const { value } = e.target\r\n    setTitle(value)\r\n  }\r\n\r\n  // Snackbar on close\r\n  const snackbarOnClose = () => {\r\n    setShowWarn(false)\r\n  }\r\n\r\n  const onKeyDown = (e: any) => {\r\n    const { key } = e\r\n    if (key === \"Enter\") {\r\n      createTodo(title)\r\n    }\r\n  }\r\n\r\n  // Decision displayed word in title prefix of dialog\r\n  const displayedTitlePrefix = type === TodoDialogTypes.Create ? \"Create\" : \"Edit\"\r\n  const displayedConfirmBtnText = type === TodoDialogTypes.Create ? \"Create\" : \"Update\"\r\n\r\n  return (\r\n    <Dialog className={styles.add_todo}\r\n      fullWidth={true}\r\n      open={show}\r\n      onClose={_onCancel}>\r\n      <DialogTitle>{displayedTitlePrefix} todo</DialogTitle>\r\n      <DialogContent style={{padding: \"0px 24px 8px\"}}> {/* Remove top padding */}\r\n        <TextField autoFocus className={styles.input_todo} label=\"Title\" placeholder=\"Write todo!\"\r\n          value={title}\r\n          defaultValue={defaultText}\r\n          onKeyDown={onKeyDown}\r\n          onChange={onChange} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {/* <Button onClick={_onCancel}>\r\n          Cancel\r\n        </Button> */}\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onConfirm}>\r\n          {displayedConfirmBtnText}\r\n        </Button>\r\n      </DialogActions>\r\n      <Snackbar open={showWarn} message=\"Todo is empty!\" autoHideDuration={2000} onClose={snackbarOnClose} />\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default TodoDialog","import { Button, withStyles } from '@material-ui/core';\r\n\r\nconst style = {\r\n  root: {\r\n    borderRadius: '0px',\r\n    boxShadow: 'none',\r\n  },\r\n}\r\n\r\nexport default withStyles(style)(Button)","import Todo from \"./Todo\";\r\n\r\nclass Tab {\r\n  id: number;\r\n  icon: string;\r\n  title: string;\r\n  todos: Todo[];\r\n\r\n  constructor(\r\n    icon: string = \"📃\",\r\n    title: string = \"그룹 이름 없음\",\r\n    todos: Todo[] = [],\r\n  ) {\r\n    this.id = getIndex()\r\n    this.icon = icon\r\n    this.title = title\r\n    this.todos = todos\r\n  }\r\n\r\n  setTitle(updatedTitle: string) {\r\n    this.title = updatedTitle\r\n    return this\r\n  }\r\n}\r\n\r\nexport type TTab = {\r\n  id: number;\r\n  icon: string;\r\n  title: string;\r\n  todos: Todo[];\r\n  setTitle: (updatedTitle: string) => void;\r\n}\r\n\r\n// Index\r\nlet index = 0\r\nconst getIndex = () => {\r\n  return index++\r\n}\r\n\r\nexport default Tab","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Popover,\r\n  InputBase,\r\n  Grid,\r\n  IconButton,\r\n  TextField\r\n} from '@material-ui/core'\r\nimport Button from 'styled-mui-components/Button'\r\nimport {\r\n  Check\r\n} from '@material-ui/icons'\r\nimport styles from 'components/IconEditor.module.scss'\r\n\r\nconst DEFAULT_ICONS = [\r\n  '💪',\r\n  '📖',\r\n  '🎮',\r\n  '🎨',\r\n  '📈',\r\n  '😥',\r\n  '⚽',\r\n  '📷',\r\n  '🥼',\r\n  '🎈',\r\n  '✨',\r\n  '🎃',\r\n]\r\n\r\ninterface IIconEditor {\r\n  open: boolean;\r\n  anchorEl: Element|null;\r\n  defaultIcon?: string;\r\n  onClose: () => void;\r\n  onConfirm: (editedIcon: string) => void;\r\n}\r\nconst IconEditor = ({\r\n  open,\r\n  anchorEl = null,\r\n  defaultIcon = \"\",\r\n  onClose,\r\n  onConfirm,\r\n}: IIconEditor) => {\r\n\r\n  // All icons\r\n  const [ icons, setIcons ] = useState<string[]>([])\r\n\r\n  // Current selected icon in icon-picker\r\n  const [ editingIcon, setEditingIcon ] = useState(defaultIcon)\r\n  // Current inputed icon\r\n  const [ inputedIcon, setInputedIcon ] = useState(\"\")\r\n\r\n  // Fetch icons\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIcons(DEFAULT_ICONS)\r\n    }, 300)\r\n  }, [])\r\n\r\n  // Update `editingIcon` state when update props\r\n  useEffect(() => {\r\n    setEditingIcon(defaultIcon)\r\n  }, [defaultIcon])\r\n\r\n  // Update state `editingIcon` when matched each `inputedIcon`, `editingIcon`\r\n  // if not matched, state `editingIcon` set to props `defaultIcon`\r\n  useEffect(() => {\r\n    if (inputedIcon) {\r\n      const findIcon = icons?.find(icon => icon === inputedIcon)\r\n      if (findIcon) {\r\n        setEditingIcon(findIcon)\r\n      }\r\n    } else {\r\n      setEditingIcon(defaultIcon)\r\n    }\r\n  }, [inputedIcon])\r\n\r\n  // On close popover\r\n  const _onClose = () => {\r\n    onClose()\r\n    setEditingIcon(defaultIcon)\r\n  }\r\n\r\n  // On icon-picker clicked\r\n  const onClickIconPicker = (clickedIcon: string) => {\r\n    setEditingIcon(clickedIcon)\r\n    onConfirm(clickedIcon)\r\n    _onClose()\r\n  }\r\n\r\n  // On input field input\r\n  const onInput = (e: any) => {\r\n    const { value } = e.target\r\n    if (value.length <= 2) {\r\n      setInputedIcon(value)\r\n    }\r\n  }\r\n  \r\n  // On input field keypress\r\n  const onInputKeyPress = (e: any) => {\r\n    const { key } = e\r\n    if (key === 'Enter' && inputedIcon.trim() !== \"\") {\r\n      onConfirmBtnClicked()\r\n    }\r\n  }\r\n\r\n  // On click confirm button\r\n  const onConfirmBtnClicked = () => {\r\n    onConfirm(inputedIcon.trim() !== \"\" ? inputedIcon : editingIcon)\r\n    _onClose()\r\n    const isNewIcon = !(icons?.find(icon => icon === inputedIcon))\r\n    if (isNewIcon) {\r\n      setIcons([inputedIcon].concat(icons))\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Popover className={styles.popover_content} open={open} \r\n      marginThreshold={0} // Remove margins\r\n      onClose={_onClose}\r\n      anchorEl={anchorEl}\r\n      transformOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}>\r\n      <div className={styles.popover_wrap}>\r\n        <div className={styles.icon_picker}>\r\n          {icons?.map(icon => (\r\n            <IconButton className={`${styles.icon} ${icon === editingIcon ? styles.selected : ''}`}\r\n              onClick={() => onClickIconPicker(icon)}>\r\n              {icon}\r\n            </IconButton>\r\n          ))\r\n          }\r\n        </div>\r\n        <div className={styles.input_icon}>\r\n          <TextField className={styles.input}\r\n            placeholder=\"Input emoji !\"\r\n            value={inputedIcon}\r\n            onInput={onInput}\r\n            onKeyPress={onInputKeyPress} />\r\n          <Button className={styles.confirm_button} variant=\"contained\" color=\"primary\"\r\n            onClick={onConfirmBtnClicked}>\r\n            <Check />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Popover> \r\n  )\r\n}\r\n\r\nexport default IconEditor;","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Tab, { TTab } from 'types/Tab';\r\n\r\nimport styles from 'components/CreateTabDialog.module.scss'\r\nimport IconEditor from './IconEditor';\r\n\r\ninterface ICreateTabDialog {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onCreate: (tab: TTab) => void;\r\n}\r\nconst CreateTabDialog = ({\r\n  open,\r\n  onClose,\r\n  onCreate,\r\n}: ICreateTabDialog) => {\r\n\r\n  \r\n  const [ iconEditorAnchor, setIconEditorAnchor ] = useState(null)\r\n  const DEFAULT_ICON = \"🖤\"\r\n  const [ icon, setIcon ] = useState(\"🖤\")\r\n  const DEFAULT_TITLE = \"\"\r\n  const [ title, setTitle ] = useState(DEFAULT_TITLE)\r\n  const initializeStates = () => {\r\n    setIcon(DEFAULT_ICON)\r\n    setTitle(DEFAULT_TITLE)\r\n  }\r\n\r\n  const onInput = (e: any) => {\r\n    const { value } = e.target\r\n    setTitle(value)\r\n  }\r\n\r\n  // On confirm button clicked\r\n  const onConfirm = () => {\r\n    if (title.trim() === \"\") {\r\n      return\r\n    }\r\n    const createdTab = new Tab(icon, title, [])\r\n    onCreate(createdTab)\r\n  }\r\n\r\n  const onClickIconBtn = (e: any) => {\r\n    setIconEditorAnchor(e.target)\r\n  }\r\n\r\n  const onConfirmIconEditor = (icon: string) => {\r\n    setIcon(icon)\r\n    initializeStates()\r\n  }\r\n\r\n  const onTitleKeyPress = (e: any) => {\r\n    if (e.key === 'Enter') {\r\n      onConfirm()\r\n    }\r\n  }\r\n\r\n  const _showIconEditor = Boolean(iconEditorAnchor)\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth\r\n      onClose={onClose}>\r\n      <DialogTitle style={{paddingBottom: '12px'}}>Add tab</DialogTitle> {/* Reduce padding of bottom */}\r\n      <DialogContent className={styles.dialog_content}>\r\n        <IconButton className={styles.icon} color=\"primary\"\r\n          onClick={onClickIconBtn}>\r\n          {icon}\r\n        </IconButton>\r\n        <TextField autoFocus className={styles.title} label=\"Tab title\" variant=\"standard\"\r\n          value={title}\r\n          onInput={onInput}\r\n          onKeyPress={onTitleKeyPress} />\r\n        <IconEditor open={_showIconEditor}\r\n          anchorEl={iconEditorAnchor}\r\n          onClose={() => {setIconEditorAnchor(null)}}\r\n          onConfirm={onConfirmIconEditor} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onConfirm}>\r\n          CREATE\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default CreateTabDialog","import React, { useEffect, useState } from 'react';\r\nimport styles from 'components/TabList.module.scss';\r\nimport Tab, { TTab } from 'types/Tab';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from 'styled-mui-components/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField } from '@material-ui/core';\r\nimport CreateTabDialog from './CreateTabDialog';\r\n\r\ninterface ITabList {\r\n  open: boolean;\r\n  tabs: TTab[];\r\n  onTabClick: (tab: TTab) => void;\r\n  onTabCreate: (tab: TTab) => void;\r\n}\r\nconst TabList = ({\r\n  open,\r\n  tabs,\r\n  onTabClick,\r\n  onTabCreate,\r\n}: ITabList) => {\r\n\r\n  const [ showCreateTab, setShowCreateTab ] = useState(false)\r\n\r\n  // On tab clicked\r\n  const _onTabClick = (id: number) => {\r\n    const tab = tabs.find(_tab => _tab.id === id)\r\n    if (tab) {\r\n      onTabClick(tab)\r\n    }\r\n  }\r\n\r\n  // On add-tab button clicked\r\n  const onClickAddTab = (e: any) => {\r\n    e.stopPropagation()\r\n    setShowCreateTab(true)\r\n  }\r\n\r\n  // On CreateTabDialog closed\r\n  const onCloseCreateTab = () => {\r\n    setShowCreateTab(false)\r\n  }\r\n\r\n  const _onTabCreate = (tab: TTab) => {\r\n    onTabCreate(tab)\r\n    setShowCreateTab(false)\r\n  }\r\n  \r\n  return (<>\r\n    <Button className={styles.add_tab} variant=\"contained\" color=\"primary\"\r\n      onClick={onClickAddTab}>\r\n      <Typography variant=\"h5\">➕ add tab</Typography>\r\n    </Button>\r\n    <ul className={`${styles.tabs} ${open ? styles.open : ''}`}>\r\n      {tabs?.map(tab => (\r\n        <TabItem {...tab} \r\n          onClick={_onTabClick} />\r\n      ))}\r\n    </ul>\r\n\r\n    <CreateTabDialog open={showCreateTab}\r\n      onClose={onCloseCreateTab}\r\n      onCreate={_onTabCreate} />\r\n  </>)\r\n}\r\n\r\ninterface IGroup extends TTab {\r\n  // setTitle?: any;\r\n  onClick: (id: number) => void;\r\n}\r\nconst TabItem = ({\r\n  id,\r\n  icon,\r\n  title,\r\n  onClick,\r\n}: IGroup) => {\r\n\r\n  const [isHover, setIsHover] = useState(false)\r\n\r\n  return (\r\n    <Button className={`${styles.tab} ${isHover ? styles.hover : ''}`} variant=\"contained\" color=\"primary\"\r\n      onClick={() => onClick(id)}\r\n      onMouseEnter={() => setIsHover(true)}\r\n      onMouseLeave={() => setIsHover(false)}>\r\n      <div className={styles.label_wrap}>\r\n        <div className={styles.icon}>{icon}</div>\r\n        <Typography className={styles.title} variant=\"h5\">{title}</Typography>\r\n      </div>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default TabList","import React, { useEffect, useState } from 'react';\r\nimport styles from 'components/SideBar.module.scss';\r\n\r\ninterface ISideBar {\r\n  children?: any;\r\n  open: boolean;\r\n  onClose?: () => void;\r\n}\r\nconst SideBar = ({\r\n  children,\r\n  open,\r\n  onClose,\r\n}: ISideBar) => {\r\n\r\n  \r\n  const [ _open, setOpen ] = useState(false)\r\n  const [ runAnimation, setRunAnimation ] = useState(false)\r\n  const ANIMATION_MS = 200\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setOpen(true)\r\n    } else {\r\n      setRunAnimation(false)\r\n      setTimeout(() => {\r\n        setOpen(false)\r\n      }, ANIMATION_MS)\r\n    }\r\n  }, [open])\r\n\r\n  useEffect(() => {\r\n    if (_open) {\r\n      setRunAnimation(true)\r\n    } \r\n  }, [_open])\r\n\r\n  const _onClose = (e: any) => {\r\n    const { target, currentTarget } = e\r\n    if (target === currentTarget) {\r\n      onClose && onClose()\r\n    }\r\n  }\r\n\r\n  return _open ? (\r\n    <div className={`${styles.side_bar} ${_open ? styles.show : ''} ${runAnimation ? styles.open : ''}`}\r\n      onClick={_onClose}>\r\n      {children}\r\n    </div>\r\n  ) : null\r\n  \r\n}\r\n\r\nexport default SideBar\r\n","class Todo {\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n\r\n  constructor(\r\n    title: string,\r\n    completed: boolean,\r\n    ) {\r\n    this.id = getIndex();\r\n    this.title = title;\r\n    this.completed = completed;\r\n  }\r\n}\r\n\r\nexport interface ITodo {\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n}\r\n\r\n// Index\r\nlet index = 0\r\nconst getIndex = () => {\r\n  return index++\r\n}\r\n\r\nexport default Todo","import { Check } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport Button from 'styled-mui-components/Button';\r\n\r\nimport styles from 'components/common/CheckboxButton.module.scss';\r\n\r\ninterface ICheckboxButton {\r\n  checked?: boolean;\r\n  onChange?: Function;\r\n}\r\n\r\nconst buttonStyle = {\r\n  minWidth: '50px',\r\n  width: '50px',\r\n  height: '50px',\r\n  padding: '0px',\r\n  borderRadius: '50%',\r\n}\r\n\r\nconst CheckboxButton = ({checked, onChange}: ICheckboxButton) => {\r\n\r\n  const buttonOnClicked = (e: any) => {\r\n    e.stopPropagation()\r\n    onChange && onChange(!checked)\r\n  }\r\n\r\n  return (\r\n    <Button disableRipple className={styles.checkbox_btn} style={buttonStyle}\r\n      onClick={buttonOnClicked}>\r\n      <div className={styles.circle}></div>\r\n      <Check className={`${styles.check} ${checked ? styles.show  : ''}`} color=\"primary\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default CheckboxButton","import React from 'react';\r\nimport { IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Typography } from '@material-ui/core';\r\nimport CheckboxButton from './common/CheckboxButton';\r\nimport styles from 'components/todoList.module.scss'\r\nimport { Delete } from '@material-ui/icons';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Todo from 'types/Todo';\r\n\r\ninterface ITodoList {\r\n  items: Todo[];\r\n  onEdit?: any;\r\n  onCheckChange: any;\r\n  onDelete: any;\r\n}\r\nconst TodoList = ({\r\n  items,\r\n  onEdit,\r\n  onCheckChange,\r\n  onDelete,\r\n}: ITodoList) => {\r\n\r\n  const isItemsExist = items.length > 0\r\n\r\n  return (\r\n    <List className={styles.list}>\r\n      {isItemsExist ? items.map( item => (\r\n        <Item {...item}\r\n          onClick={onEdit}\r\n          onCheckChange={onCheckChange}\r\n          onDelete={onDelete} />\r\n      )) : (\r\n        <Typography variant='h4' >Try create todo !</Typography>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\ninterface ListItemInterface {\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n  onClick: any;\r\n  onCheckChange: any;\r\n  onDelete: any;\r\n}\r\nconst Item = ({\r\n  id,\r\n  title,\r\n  completed,\r\n  onClick,\r\n  onCheckChange,\r\n  onDelete,\r\n}: ListItemInterface) => {\r\n\r\n  const _onClick = () => {\r\n    onClick(id)\r\n  }\r\n  \r\n  const onClickDelete = () => {\r\n    onDelete(id)\r\n  }\r\n\r\n  const _onCheckChange = (value: boolean) => {\r\n    onCheckChange(id, value)\r\n  }\r\n\r\n  return (\r\n    <ListItem onClick={_onClick} button>\r\n      <ListItemIcon>\r\n        <CheckboxButton onChange={_onCheckChange} checked={completed} />\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={<ListItemTypo text={title}/>}\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <IconButton onClick={onClickDelete} color=\"primary\">\r\n          <Delete className={styles.item_secondary_icon}/>\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\ninterface ListItemTypeInterface {\r\n  text: string;\r\n}\r\nconst ListItemTypoStyle = {\r\n\r\n}\r\nconst _ListItemType = ({text}: ListItemTypeInterface) => {\r\n  return (\r\n    <Typography className={styles.item_content} variant=\"h5\" color=\"primary\">{text}</Typography>\r\n  )\r\n}\r\nconst ListItemTypo = withStyles(ListItemTypoStyle)(_ListItemType)\r\n\r\nexport default TodoList","import { Add } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nimport styles from 'components/AddTodoButton.module.scss';\r\nimport { Fab } from '@material-ui/core';\r\n\r\ninterface AddTodoButtonInterface {\r\n  onClick: any;\r\n}\r\nconst AddTodoButton = ({\r\n  onClick\r\n}: AddTodoButtonInterface) => {\r\n\r\n  const _onClick = () => {\r\n    onClick()\r\n  }\r\n\r\n  return (\r\n    <Fab className={styles.add_button} onClick={_onClick} aria-label=\"create todo\">\r\n      <Add />\r\n    </Fab>\r\n  )\r\n}\r\n\r\nexport default AddTodoButton","import React, { useState } from 'react';\r\nimport TodoList from './todoList';\r\n\r\nimport styles from 'components/body.module.scss';\r\nimport AddTodoButton from './AddTodoButton';\r\nimport Todo, { ITodo } from 'types/Todo';\r\nimport TodoDialog, { TodoDialogTypes } from './TodoDialog';\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\ninterface IBody {\r\n  todos: Todo[];\r\n  // editingTodo: Todo|null;\r\n  // setEditingTodo?: any;\r\n  // onTodoChecked?: any;\r\n  onTodoDeleted: (id: number) => void;\r\n  onTodoEdited: (todo: Todo) => void;\r\n  onTodoCreated: (todo: Todo) => void;\r\n}\r\nconst Body = ({\r\n  todos,\r\n  // editingTodo,\r\n  // setEditingTodo,\r\n  // onTodoChecked,\r\n  onTodoDeleted,\r\n  onTodoEdited,\r\n  onTodoCreated,\r\n}: IBody) => {\r\n\r\n  const [ editingTodo, setEditingTodo ] = useState<Todo|null>(null)\r\n\r\n  const [ showTodoDialog, setShowTodoDialog ] = useState<boolean>(false)\r\n\r\n  const [ showWarn, setShowWarn ] = useState(false)\r\n\r\n\r\n  // On add-todo button clicked\r\n  const AddBtnClicked = () => {\r\n    setEditingTodo(null)\r\n    setShowTodoDialog(true)\r\n  }\r\n\r\n  // On dialog canceled\r\n  const onCancel = () => {\r\n    setShowTodoDialog(false) // Dialog off\r\n  }\r\n\r\n  const _setEditingTodo = (id: number) => {\r\n    if (todos) {\r\n      const targetTodo = todos.find(todo => (todo.id === id))\r\n      \r\n      if (targetTodo) {\r\n        setEditingTodo(targetTodo)\r\n        setShowTodoDialog(true)\r\n      } else {\r\n        setShowWarn(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  // On snackbar closed\r\n  const snackbarOnClose = () => {\r\n    setShowWarn(false)\r\n  }\r\n\r\n  // On todo created\r\n  const _onTodoCreated = (todo: Todo) => {\r\n    onTodoCreated(todo)\r\n\r\n    setTimeout(() => { // Must be fix (state not updated issue)\r\n      setShowTodoDialog(false)\r\n    }, 100)\r\n  }\r\n\r\n  const _onTodoEdited = (todo: Todo) => {\r\n    onTodoEdited(todo)\r\n  }\r\n\r\n  // On todo checked\r\n  const onTodoChecked = (id: number, checked: boolean) => {\r\n    if (todos) {\r\n      const targetTodo = todos.find(todo => (todo.id === id))\r\n      if (!targetTodo) {\r\n        console.error('onTodoChecked - todo not finded!!')\r\n        return\r\n      }\r\n  \r\n      const assignedTodo = {...targetTodo,\r\n        completed: checked\r\n      }\r\n      onTodoEdited(assignedTodo)\r\n    }\r\n  }\r\n\r\n  const dialogType = editingTodo ? TodoDialogTypes.Edit : TodoDialogTypes.Create\r\n  const dialogDefaultText = editingTodo ? editingTodo.title : undefined\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <TodoList items={todos}\r\n        onEdit={_setEditingTodo}\r\n        onCheckChange={onTodoChecked}\r\n        onDelete={onTodoDeleted} />\r\n      <AddTodoButton onClick={AddBtnClicked} />\r\n\r\n      <TodoDialog show={showTodoDialog}\r\n        type={dialogType}\r\n        todo={editingTodo}\r\n        onUpdate={_onTodoEdited}\r\n        defaultText={dialogDefaultText}\r\n        onCreate={_onTodoCreated}\r\n        onCancel={onCancel} />\r\n\r\n      <Snackbar open={showWarn} message=\"Oops, somethings wrong\" autoHideDuration={2000} onClose={snackbarOnClose}  />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Popover,\r\n  InputBase\r\n} from '@material-ui/core'\r\nimport Button from 'styled-mui-components/Button'\r\nimport {\r\n  Check\r\n} from '@material-ui/icons'\r\nimport styles from 'components/TitleEditor.module.scss'\r\n\r\ninterface ITitleEditor {\r\n  open: boolean;\r\n  anchorEl: Element|null;\r\n  defaultTitle?: string;\r\n  onClose: () => void;\r\n  onConfirm: (editedTitle: string) => void;\r\n}\r\nconst TitleEditor = ({\r\n  open,\r\n  anchorEl = null,\r\n  defaultTitle = \"\",\r\n  onClose,\r\n  onConfirm,\r\n}: ITitleEditor) => {\r\n\r\n  const [ editingTitle, setEditingTitle ] = useState(defaultTitle)\r\n  const onChangeEditingTitle = (e: any) => {\r\n    const { value } = e.currentTarget\r\n    setEditingTitle(value)\r\n  }\r\n  \r\n  // Update `editingTitle` state when update props\r\n  useEffect(() => {\r\n    setEditingTitle(defaultTitle)\r\n  }, [defaultTitle])\r\n\r\n  // On close popover\r\n  const _onClose = () => {\r\n    onClose()\r\n  }\r\n  \r\n  // On click confirm button\r\n  const onConfirmBtnClicked = () => {\r\n    onConfirm(editingTitle)\r\n    _onClose()\r\n  }\r\n\r\n  const onInputKeyPress = (e: any) => {\r\n    if (e.key === 'Enter') { // On enter\r\n      onConfirmBtnClicked()\r\n    }\r\n  }\r\n\r\n  const placeHolder = editingTitle ? editingTitle : 'Input text to update!'\r\n\r\n  return (\r\n    <Popover className={styles.popover_content} open={open} \r\n      marginThreshold={0} // Remove margins\r\n      onClose={_onClose}\r\n      anchorEl={anchorEl}\r\n      transformOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}>\r\n      <InputBase\r\n        autoFocus={true}\r\n        value={editingTitle}\r\n        onChange={onChangeEditingTitle}\r\n        onKeyPress={onInputKeyPress}\r\n        className={styles.edit_title}\r\n        placeholder={placeHolder}\r\n      />\r\n      <Button className={styles.confirm_button}\r\n        onClick={onConfirmBtnClicked}>\r\n        <Check color=\"primary\" style={{fontSize: '36px'}} />\r\n      </Button>\r\n    </Popover> \r\n  )\r\n}\r\n\r\nexport default TitleEditor;","import React, { useState } from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport styles from 'components/header.module.scss';\r\nimport Button from '../styled-mui-components/Button';\r\nimport Tab, { TTab } from 'types/Tab';\r\nimport { Grid, IconButton, Input, InputBase, Popover, TextField, Typography } from '@material-ui/core';\r\nimport { Check } from '@material-ui/icons';\r\nimport TitleEditor from './TitleEditor';\r\nimport IconEditor from './IconEditor';\r\n\r\ninterface IHeader {\r\n  tab: TTab|null;\r\n  onTabClick?: () => void;\r\n  onEditTitle: (editedTitle: string) => void;\r\n  onEditIcon: (editedIcon: string) => void;\r\n}\r\nconst Header = ({\r\n  tab,\r\n  onTabClick,\r\n  onEditTitle,\r\n  onEditIcon,\r\n}: IHeader) => {\r\n\r\n  const [ titleAnchorEl, setTitleAnchorEl ] = useState(null)\r\n  const [ iconAnchorEl, setIconAnchorEl ] = useState(null)\r\n\r\n  const {\r\n    icon,\r\n    title,\r\n  } = tab ?? {}\r\n\r\n  // On click title\r\n  const onClickTitle = (e: any) => {\r\n    setTitleAnchorEl(e.currentTarget)\r\n  }\r\n\r\n  // On click icon\r\n  const onClickIcon = (e: any) => {\r\n    setIconAnchorEl(e.currentTarget)\r\n  }\r\n  \r\n  // On `TitleEditor` closed\r\n  const onCloseTitleEditor = () => {\r\n    setTitleAnchorEl(null)\r\n  }\r\n\r\n  // On `IconEditor` closed\r\n  const onCloseIconEditor = () => {\r\n    setIconAnchorEl(null)\r\n  }\r\n\r\n  const showTitleEditor = Boolean(titleAnchorEl)\r\n  const showIconEditor = Boolean(iconAnchorEl)\r\n\r\n  return (\r\n    <div className={styles.header}>\r\n      <Button className={styles.menu} variant=\"contained\" color=\"primary\"\r\n        onClick={onTabClick}>\r\n        <MenuIcon style={{fontSize: '36px'}} />\r\n      </Button>\r\n      {tab ? (\r\n        <div className={styles.title_wrap}>\r\n          <IconButton className={styles.icon} color=\"primary\"\r\n            onClick={onClickIcon}>\r\n            {icon}\r\n          </IconButton>\r\n          <IconEditor open={showIconEditor}\r\n            defaultIcon={icon}\r\n            anchorEl={iconAnchorEl}\r\n            onClose={onCloseIconEditor}\r\n            onConfirm={onEditIcon} />\r\n\r\n          <Button className={styles.title} onClick={onClickTitle}>\r\n            {title}\r\n          </Button>\r\n          <TitleEditor open={showTitleEditor}\r\n            defaultTitle={title}\r\n            anchorEl={titleAnchorEl}\r\n            onClose={onCloseTitleEditor}\r\n            onConfirm={onEditTitle} />\r\n        </div>\r\n      ) : (\r\n        <p> Try create group! </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import { Typography } from '@material-ui/core';\r\nimport TabList from 'components/TabList';\r\nimport SideBar from 'components/SideBar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Tab, { TTab } from 'types/Tab';\r\nimport Todo, { ITodo } from 'types/Todo';\r\nimport styles from './app.module.scss';\r\nimport Body from './components/body';\r\nimport Header from './components/header';\r\n\r\nconst TODOS_DAILY_TASKS: ITodo[] = [\r\n  new Todo('저녁에 운동하기', false),\r\n  new Todo('유튜브 영상 보기', false),\r\n  new Todo('방 청소하기', false),\r\n  new Todo('저녁에 운동하기', false),\r\n  new Todo('유튜브 영상 보기', false),\r\n  new Todo('방 청소하기', false),\r\n]\r\nconst TODOS_STUDY: ITodo[] = [\r\n  new Todo('강의 듣기', false),\r\n]\r\nconst TODOS_GAMES: ITodo[] = [\r\n  new Todo('Marvel\\'s Spider-Man', false),\r\n  new Todo('Last of us', false),\r\n  new Todo('롤 그마', false),\r\n  new Todo('몬헌', false),\r\n]\r\n\r\nconst TABS:TTab[] = [\r\n  new Tab('💪', 'Daily tasks', TODOS_DAILY_TASKS),\r\n  new Tab('📖', 'Study', TODOS_STUDY),\r\n  new Tab('🎮', 'Games', TODOS_GAMES),\r\n]\r\n\r\nfunction App() {\r\n\r\n  const [ showSidebar, setShowSidebar ] = useState<boolean>(false)\r\n  \r\n  // All todo datas\r\n  const [ tabs, setTabs ] = useState<TTab[]|null>(null)\r\n  const [ tabSelection, setTabSelection ] = useState<TTab|null>(null)\r\n  const updateTodos = (todos:Todo[]) => {\r\n    if (tabSelection) {\r\n      setTabSelection({...tabSelection,\r\n        todos: todos,\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!tabs) { // When initialize\r\n      setTimeout(() => {\r\n        setTabs(TABS)\r\n        if (TABS[0]) { // If tab exist then, binding todos\r\n          setTabSelection(TABS[0])\r\n        }\r\n      }, 300)\r\n    }\r\n  }, [])\r\n\r\n  // On initialized `data` state\r\n  useEffect(() => {\r\n    \r\n  }, [tabs])\r\n\r\n  const deleteTodo = (id: number) => {\r\n    if (tabSelection) {\r\n      const { todos } = tabSelection\r\n      updateTodos(todos.filter(todo => (todo.id !== id)))\r\n    }\r\n  }\r\n\r\n  // On todo created in todo-dialog\r\n  const onTodoCreated = (todo: Todo) => {\r\n    if (tabSelection) {\r\n      const { todos } = tabSelection\r\n      updateTodos([todo].concat(todos))\r\n    }\r\n  }\r\n\r\n  // // On todo check changed\r\n  // const onTodoChecked = (id: number, value: boolean) => {\r\n  //   updateCheckedTodo(id, value)\r\n  // }\r\n\r\n  // On todo delete\r\n  const onTodoDeleted = (id: number) => {\r\n    deleteTodo(id)\r\n  }\r\n\r\n  // On todo edited\r\n  const onTodoEdited = (updatedTodo: Todo) => {\r\n    if (tabSelection) {\r\n      const { todos } = tabSelection\r\n      const result = todos.map(todo => {\r\n        if (todo.id === updatedTodo.id) {\r\n          return updatedTodo\r\n        }\r\n        return todo\r\n      })\r\n  \r\n      updateTodos(result)\r\n    }\r\n  }\r\n\r\n  // On menu clicked in header\r\n  const onTabClicked = () => {\r\n    setShowSidebar(true)\r\n  }\r\n\r\n  // On SideBar closed\r\n  const onSidebarClose = () => {\r\n    setShowSidebar(false)\r\n  }\r\n\r\n  // On tab clicked\r\n  const onTabClick = (tab: TTab) => {\r\n    if (tabs) {\r\n      const { id:currentTabId } = tabSelection ?? {}\r\n      const updatedTabs = tabs.map(_tab => (\r\n        _tab.id === currentTabId ? tabSelection ?? _tab : _tab\r\n      ))\r\n\r\n      setTabs(updatedTabs)\r\n      setTabSelection(tab)\r\n    }\r\n    setShowSidebar(false)\r\n  }\r\n\r\n  // On tab create from TabList component\r\n  const onTabCreate = (tab: TTab) => {\r\n    setTabs([tab].concat(tabs ?? []))\r\n    setTabSelection(tab)\r\n  }\r\n\r\n  // On edit title of tab\r\n  const onEditTitle = (editedTitle: string) => {\r\n    if (tabs && tabSelection) {\r\n      const updatedTab = {...tabSelection,\r\n        title: editedTitle,\r\n      }\r\n      setTabs(tabs.map(tab => (  // Update state tabs\r\n        tab.id === tabSelection.id ? updatedTab : tab\r\n      )))\r\n      setTabSelection(updatedTab)\r\n    }\r\n  }\r\n\r\n  // On edit icon of tab\r\n  const onEditIcon = (editedIcon: string) => {\r\n    if (tabs && tabSelection) {\r\n      const updatedTab = {...tabSelection,\r\n        icon: editedIcon,\r\n      }\r\n      setTabs(tabs.map(tab => (  // Update state tabs\r\n        tab.id === tabSelection.id ? updatedTab : tab\r\n      )))\r\n      setTabSelection(updatedTab)\r\n    }\r\n  }\r\n\r\n  const todos = tabSelection?.todos ?? []\r\n\r\n  return (<>\r\n    <div className={styles.App}>{tabs ? (<>\r\n      <Header tab={tabSelection}\r\n        onTabClick={onTabClicked}\r\n        onEditTitle={onEditTitle}\r\n        onEditIcon={onEditIcon} />\r\n      {todos && (\r\n        <Body todos={todos}\r\n          onTodoCreated={onTodoCreated}\r\n          onTodoDeleted={onTodoDeleted}\r\n          onTodoEdited={onTodoEdited} />\r\n      )}\r\n      {/* <Typography variant=\"h5\" color=\"primary\" style={{marginTop: '50px'}}> Try create group! </Typography> */}\r\n    </>) : (\r\n      <Typography variant=\"h4\" color=\"primary\">Loading ..</Typography>\r\n    )}\r\n\r\n    \r\n    <SideBar open={showSidebar}\r\n      onClose={onSidebarClose}>\r\n      {tabs ? (\r\n        <TabList open={showSidebar}\r\n          tabs={tabs}\r\n          onTabClick={onTabClick}\r\n          onTabCreate={onTabCreate} />\r\n      ) : showSidebar ? (\r\n        <Typography>Loading ..</Typography>\r\n      ) : <></>}\r\n    </SideBar>\r\n\r\n    </div>\r\n  </>);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3F4F50',\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core';\nimport AppTheme from './AppTheme';\n\nReactDOM.render(\n  <ThemeProvider theme={AppTheme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_tab\":\"TabList_add_tab__1KvMb\",\"tabs\":\"TabList_tabs__3Jkgq\",\"open\":\"TabList_open__11GgD\",\"tab\":\"TabList_tab__3fgE5\",\"label_wrap\":\"TabList_label_wrap__2Us2_\",\"icon\":\"TabList_icon__1PS2E\",\"title\":\"TabList_title__2BOSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popover_content\":\"IconEditor_popover_content__-FvIv\",\"popover_wrap\":\"IconEditor_popover_wrap__27UTa\",\"icon_picker\":\"IconEditor_icon_picker__yncGF\",\"icon\":\"IconEditor_icon__wxiU7\",\"selected\":\"IconEditor_selected__2iQIx\",\"input_icon\":\"IconEditor_input_icon__3lUd2\",\"input\":\"IconEditor_input__1nfUr\",\"confirm_button\":\"IconEditor_confirm_button__C6cvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__17T4t\",\"menu\":\"header_menu__191km\",\"title_wrap\":\"header_title_wrap__1jYM2\",\"icon\":\"header_icon__3Lb2m\",\"title\":\"header_title__38zi_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox_btn\":\"CheckboxButton_checkbox_btn__A0Vfu\",\"circle\":\"CheckboxButton_circle__xqcKC\",\"check\":\"CheckboxButton_check___OOOS\",\"show\":\"CheckboxButton_show__2WeYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_content\":\"CreateTabDialog_dialog_content__3dqYf\",\"icon\":\"CreateTabDialog_icon__11bSz\",\"title\":\"CreateTabDialog_title__1XXMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side_bar\":\"SideBar_side_bar__1KyUU\",\"show\":\"SideBar_show__Yqbgx\",\"open\":\"SideBar_open__1-wSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"todoList_list__3Q0Ds\",\"item_content\":\"todoList_item_content__1tEVm\",\"item_secondary_icon\":\"todoList_item_secondary_icon__3AG4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popover_content\":\"TitleEditor_popover_content__21Feh\",\"edit_title\":\"TitleEditor_edit_title__1ZzOu\",\"confirm_button\":\"TitleEditor_confirm_button__SHRdf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_todo\":\"TodoDialog_add_todo__B4QSh\",\"input_todo\":\"TodoDialog_input_todo__2TnTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__13EnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"body_body__1jaDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_button\":\"AddTodoButton_add_button__vLuI4\"};"],"sourceRoot":""}